<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Gabo Esquivel - Software Developer</title>
    <link>https://gaboesquivel.com/tags/security/</link>
    <description>Recent content in security on Gabo Esquivel - Software Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://gaboesquivel.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node.js HTTPS and SSL Certificate for Development</title>
      <link>https://gaboesquivel.com/blog/2014/node.js-https-and-ssl-certificate-for-development/</link>
      <pubDate>Thu, 21 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://gaboesquivel.com/blog/2014/node.js-https-and-ssl-certificate-for-development/</guid>
      <description>&lt;p&gt;HTTPS is the HTTP protocol over TLS/SSL and HTTPS is required to protect your data. It is the most popular network protocol for establishiing secure connections for exchanging documents on the internet. It is basically HTTP carried over a TCP socket, which has been secured using SSL. Transport Layer Security (TLS) and Secure Sockets Layer (SSL) are cryptographic protocols designed to provide communication security. In this post I&amp;rsquo;ll show how to create a self-signed SSL certificate and set up an express 4.0 project that uses it for local development purposes.&lt;/p&gt;
&lt;h3 id=&#34;self-signed-ssl-certificate&#34;&gt;Self-Signed SSL Certificate&lt;/h3&gt;
&lt;p&gt;There are two kinds of certificates: those signed by a &amp;lsquo;&lt;a href=&#34;http://en.wikipedia.org/wiki/Certificate_authority&#34;&gt;Certificate Authority&lt;/a&gt;&amp;rsquo;, or CA, and &amp;lsquo;self-signed certificates&amp;rsquo;. A Certificate Authority is a trusted source for an SSL certificate, and using a certificate from a CA allows your users to be trust the identity of your website. In most cases, you would want to use a CA-signed certificate in a production environment - for testing purposes, however, a self-signed certicate will do just fine.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
